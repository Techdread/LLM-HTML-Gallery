{
  "title": "ASCII Sphere Rotation",
  "htmlContent": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>ASCII Sphere Rotation</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\r\n    <style>\r\n        body {\r\n            margin: 0;\r\n            padding: 0;\r\n            overflow: hidden;\r\n            background-color: #000;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            height: 100vh;\r\n            font-family: 'Courier New', monospace;\r\n        }\r\n\r\n        canvas {\r\n            border: 2px solid #333;\r\n            box-shadow: 0 0 20px rgba(0, 150, 255, 0.7);\r\n        }\r\n\r\n        .instructions {\r\n            position: absolute;\r\n            bottom: 20px;\r\n            color: #aaa;\r\n            font-size: 14px;\r\n            text-align: center;\r\n            width: 100%;\r\n            background: rgba(0, 0, 0, 0.5);\r\n            padding: 8px;\r\n            border-top: 1px solid #333;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"instructions\">\r\n        Rotate the sphere with mouse movement | Click to reset rotation\r\n    </div>\r\n    <script>\r\n        let points = [];\r\n        const numPoints = 800;\r\n        const radius = 150;\r\n        const cameraDistance = 250;\r\n        let angleX = 0;\r\n        let angleY = 0;\r\n        let rotSpeed = 0.007;\r\n\r\n        function setup() {\r\n            createCanvas(windowWidth, windowHeight);\r\n            generatePoints();\r\n            noStroke();\r\n            textAlign(CENTER, CENTER);\r\n        }\r\n\r\n        function generatePoints() {\r\n            points = [];\r\n            for (let i = 0; i < numPoints; i++) {\r\n                const theta = random(TWO_PI);\r\n                const phi = acos(2 * random() - 1); // Uniform distribution on sphere\r\n                const x = radius * sin(phi) * cos(theta);\r\n                const y = radius * sin(phi) * sin(theta);\r\n                const z = radius * cos(phi);\r\n                points.push({ x, y, z });\r\n            }\r\n        }\r\n\r\n        function draw() {\r\n            background(0);\r\n\r\n            // Apply mouse rotation\r\n            angleX += (mouseY - height / 2) * 0.001;\r\n            angleY += (mouseX - width / 2) * 0.001;\r\n\r\n            for (let i = 0; i < points.length; i++) {\r\n                const p = points[i];\r\n\r\n                // Rotate around Y axis\r\n                let x1 = p.x * cos(angleY) - p.z * sin(angleY);\r\n                let z1 = p.x * sin(angleY) + p.z * cos(angleY);\r\n\r\n                // Rotate around X axis\r\n                let y2 = p.y * cos(angleX) - z1 * sin(angleX);\r\n                let z2 = p.y * sin(angleX) + z1 * cos(angleX);\r\n\r\n                // Skip points behind camera (z2 >= 0)\r\n                if (z2 >= 0) continue;\r\n\r\n                // Calculate depth-based color\r\n                const d = cameraDistance + z2; // Distance from camera to point\r\n                const minDepth = cameraDistance - radius;\r\n                const maxDepth = cameraDistance + radius;\r\n                let norm = (d - minDepth) / (maxDepth - minDepth);\r\n                norm = constrain(norm, 0, 1);\r\n\r\n                const brightness = 255 * (1 - norm);\r\n\r\n                // Perspective projection\r\n                const scale = cameraDistance / (-z2); // Scale based on distance from camera\r\n                const xScreen = x1 * scale + width / 2;\r\n                const yScreen = y2 * scale + height / 2;\r\n\r\n                // Draw the ASCII character with calculated color\r\n                fill(brightness, brightness, brightness);\r\n                textSize(8);\r\n                text(randomDigit(), xScreen, yScreen);\r\n            }\r\n\r\n            // Reset rotation when clicked\r\n            if (mouseIsPressed) {\r\n                angleX = 0;\r\n                angleY = 0;\r\n            }\r\n        }\r\n\r\n        function randomDigit() {\r\n            return floor(random(10));\r\n        }\r\n\r\n        function windowResized() {\r\n            resizeCanvas(windowWidth, windowHeight);\r\n        }\r\n    </script>\r\n</body>\r\n\r\n</html>",
  "id": "ascii-qwen3-30b-a3b-thinking",
  "metadata": {
    "prompt": "Imported from one-page directory",
    "tags": "Astronomy",
    "timestamp": "2025-08-04T21:59:58.142Z",
    "model": "qwen3-30b-a3b-thinking",
    "description": "An interactive web application featuring astronomy."
  }
}
